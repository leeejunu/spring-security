<!-- mapper DTD 선언 -->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.study.security.mapper.UserMapper">

    <resultMap id="RoleResultMap" type="com.study.security.entity.Role">
        <id property="roleId" column="role_id"/>
        <result property="roleName" column="role_name"/>
        <result property="roleNameKr" column="role_name_kor"/>
    </resultMap>

    <resultMap id="UserRoleResultMap" type="com.study.security.entity.UserRole">
        <id property="userRoleId" column="user_role_id" />
        <result property="userId" column="urt_user_id" />
        <result property="roleId" column="urt_role_id" />
        <result property="createDt" column="create_dt"/>
        <result property="updateDt" column="update_dt"/>
        <association property="role" resultMap="RoleResultMap"/>
    </resultMap>

    <resultMap id="UserResultMap" type="com.study.security.entity.UserRole">
        <id property="userId" column="user_id" />
        <result property="username" column="username" />
        <result property="password" column="password" />
        <result property="email" column="email"/>
        <collection property="userRoles" resultMap="UserRoleResultMap"/>
    </resultMap>

    <insert id="addUser" useGeneratedKeys="true" keyProperty="userId">
        insert into user_tb values (0, #{username}, #{password}, #{email});
    </insert>
    <select id="getUserByUserId">
        select * from user_tb where user_id = #{userId}
    </select>
    <select id="getUserByUsername">
        select * from user_t b where username = #{username}
    </select>

    <select id="getUserByUserId" resultMap="UserResultMap">
        select
            ut.user_id,
            ut.username,
            ut.password,
            ut.email,

            urt.user_role_id,
            urt.user_id as urt_user_id,
            urt.role_id as urt_role_id,
            urt.create_dt,
            urt.update_dt,

            rt.role_id,
            rt.role_name,
            rt.role_name_kor
        from user_tb ut
            left outer join user_role_tb urt on (urt.user_id = ut.user_id)
            left outer join role_tb rt on (ut.role_id = rt.role_id)
        where ut.user_id = #{userId};
    </select>

    <select id="getUserByUsername" resultMap="UserResultMap">
        select
            ut.user_id,
            ut.username,
            ut.password,
            ut.email,

            urt.user_role_id,
            urt.user_id as urt_user_id,
            urt.role_id as urt_role_id,
            urt.create_dt,
            urt.update_dt,

            rt.role_id,
            rt.role_name,
            rt.role_name_kor
        from user_tb ut
                 left outer join user_role_tb urt on (urt.user_id = ut.user_id)
                 left outer join role_tb rt on (ut.role_id = rt.role_id)
        where ut.username = #{username};
    </select>
</mapper>